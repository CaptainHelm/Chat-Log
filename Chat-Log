#SingleInstance force
#UseHook
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.

SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.


amount_of_Commands := 9 ;amount of commands usable
GroupSize := 6 ;amount of characters in the group in order
BoxSize := 3 ;amount of multiboxed characters


char1 := "You tell your party" ; character that is reading the chatlog from displays messages without their name
char2 := "namename " ;whitelisted names of players in the group, can be yourself or anyone you want available to send commands as long as they have access to party chat or if configured private chat channel.
char3 := "steve "
char4 := "sffen "
char4 := "coke "
char5 := "cocainejane "
char6 := "zxccczz "

chatCommand1 := "command 1" ;chat commands, modifiable phrase to trigger command#
chatCommand2 := "command 2"
chatCommand3 := "command 3"
chatcommand4 := "command 4"
chatcommand5 := "command 5"
chatcommand6 := "command 6"
chatcommand7 := "command 7"
chatcommand8 := "command 8"
chatcommand9 := "command 9"

command1 := "1" ;hotkey sent to clients
command2 := "2"
command3 := "3"
command4 := "4"
command5 := "5"
command6 := "6"
command7 := "7"
command8 := "8"
command9 := "9"

box1 := "Boots " ;multiboxed character names
box2 := "Slippers "
box3 := "stephon "

boxclient1 := "ahk_pid 66628" ;PID of multiboxed characters
boxclient2 := "ahk_pid 77448"
boxclient3 := "windownam3"

FilePath := A_ScriptDir "\eqlog_Helmet_yelinak.txt" 
File := FileOpen(FilePath, "r")
OldLogFileSize := 0
File.Seek(0, 2)
Loop
{
	LogFileSize := File.Length
	if (LogFileSize > OldLogFileSize)
	{
		Loop
		{
			if File.AtEOF
				Break
			chat_message := File.Readline()
			Chat_Commands(Chat_Message, Message_From_Char, Groupsize, char%a_index%, box%a_index%, Boxsize, Character_Commanded, chatCommand%a_index%, Command_Received, amount_of_Commands, command%a_index%)
		}
		OldLogFileSize := LogFileSize
	}
	Sleep, 1
}

Chat_Commands(Chat_Message, Message_From_Char, Groupsize, char#, box#, boxsize, Character_Commanded, chatCommand#, Command_received, amount_of_Commands, command#)
{
	Whitelist(Chat_Message, Message_From_Char, Groupsize, char#, box#, boxsize, Character_Commanded, chatCommand#, Command_received, amount_of_Commands, command#)
}

whitelist(Chat_Message, Message_From_Char, Groupsize, char#, box#, boxsize, Character_Commanded, chatCommand#, Command_Received, amount_of_Commands, command#)
{
	loop %GroupSize%
	{
		if instr(Chat_message, char%a_index%)
		{				
			Message_From_Char := char%a_index%
			Box_Commanded_Filter(Chat_Message, box#, Character_Commanded, boxsize, chatCommand#, Command_Received, amount_of_Commands, command#)
			break
		}
	}
}

Box_Commanded_Filter(chat_message, box#, Character_Commanded, boxsize, chatCommand#, Command_Received, amount_of_Commands, command#)
{
	loop %boxsize%
	{
		if instr(chat_message, box%a_index%)
		{
			Character_Commanded := box%a_index%
			Command_Filter(chat_message, chatCommand#, command_received, amount_of_Commands, Character_Commanded, command#)
			break
		}
	}
}

Command_Filter(chat_message, chatCommand#, command_received, amount_of_Commands, Character_Commanded, command#)
{
	loop %amount_of_Commands%
	{
		if instr(chat_message, chatCommand%a_index%)
		{
			Command_Received := chatCommand%a_index%
			Character_Commanded_Filtered(command_received, Character_Commanded, chatcommand#, command#, amount_of_Commands)
			break
		}
	}
}

Character_Commanded_Filtered(command_received, Character_Commanded, chatcommand#, command#, amount_of_Commands)
{
	loop %amount_of_Commands%
	{
		if instr(character_commanded, box%a_index%)
		{
			Character_Commanded := boxclient%a_index%
			Send_Command(command_received, command#, Character_Commanded, amount_of_Commands)
			break
		}
	}
}

Send_Command(command_received, command#, Character_Commanded, amount_of_Commands)
{
	loop %amount_of_Commands%
	{
		if instr(command_received, chatcommand%a_index%)
		{	
			command_received := command%a_index%
			controlsend,,%command_received%, %character_commanded%
			return
		}
	}	
}

!^R::Reload
